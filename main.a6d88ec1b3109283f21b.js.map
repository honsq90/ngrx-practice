{"version":3,"sources":["webpack:///./src/app/home/home.component.html","webpack:///./src/app/containers/app.component.html","webpack:///./src/app/containers/app.component.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/config/environments/environment.ts","webpack:///./src/app/store/reducers/index.ts","webpack:///./src/app/lib/phoenix-rxjs.ts","webpack:///./src/app/canvas/canvas.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/main.js","webpack:///./src/app/home/home.component.scss","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/canvas/canvas.component.html","webpack:///./src/app/canvas/canvas.component.scss","webpack:///./src/app/containers/app.component.css"],"names":["module","exports","app_component_AppComponent","AppComponent","this","title","__decorate","Object","core","selector","home_component_HomeComponent","HomeComponent","rowsCount","Array","home_component_decorate","environment","reducers","routerReducer","router_store","CustomSerializer","store","prototype","serialize","routerState","url","queryParams","root","state","firstChild","params","phoenix_rxjs_PhoenixChannel","PhoenixChannel","socket","topic","channel","join","_this","Observable","observer","receive","resp","next","error","push","message","payload","timeout","leave","messages","on","pipe","share","phoenix_rxjs_PhoenixSocket","PhoenixSocket","socketUrl","phoenix","connect","phoenixSocket","mapMouseEventToStrokeMove","map","mouseEvent","offsetX","offsetY","getMousePos","touchEventOperators","canvas","tap","touchEvent","target","preventDefault","filter","changedTouches","length","canvasDom","rect","getBoundingClientRect","clientX","left","clientY","top","getTouchPos","mapTouchEventToStrokeMove","canvas_component_CanvasComponent","CanvasComponent","ref","socketPending","ngAfterViewInit","nativeElement","setupCanvas","handleCanvas","setupWebSockets","containerStyle","getComputedStyle","canvasContainer","width","parseInt","height","ctx","getContext","lineWidth","lineJoin","lineCap","mouseDown$","fromEvent","event","stopPropagation","merge","mouseMove$","mouseUp$","mouseDown","publishToSocket","switchMap","_","takeUntil","mouseUp","subscribe","currentMove","canvasChannel","x","y","color","drawStroke","context","_a","strokeStyle","lastMove","beginPath","moveTo","lineTo","closePath","stroke","i","Math","floor","random","getRandomColor","_response","detectChanges","mergeMap","strokeStarted","strokeAddedEvent$","strokeEndedEvent$","pairwise","canvas_component_decorate","ROUTES","path","component","loadChildren","app_module_AppModule","AppModule","app_module_decorate","imports","platform_browser","router","forRoot","effects","http","store_devtools","instrument","logOnly","providers","provide","useClass","declarations","bootstrap","platform_browser_dynamic","bootstrapModule","catch","err","console","log","../features/todos/todos.module","webpackAsyncContext","req","ids","__webpack_require__","e","then","Promise","resolve","Error","code","keys","id"],"mappings":"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","file":"main.a6d88ec1b3109283f21b.js","sourcesContent":["module.exports = \"<h1 class=\\\"title\\\">Sticky Header example</h1>\\n<table class=\\\"table is-striped\\\">\\n  <thead>\\n    <tr>\\n      <th class=\\\"sticky-header\\\">\\n        <div class=\\\"header\\\">\\n          Header\\n        </div>\\n      </th>\\n      <th class=\\\"sticky-header\\\">\\n        <div class=\\\"header\\\">\\n          Header\\n        </div>\\n      </th>\\n      <th class=\\\"sticky-header\\\">\\n        <div class=\\\"header\\\">\\n          Header\\n        </div>\\n      </th>\\n      <th class=\\\"sticky-header\\\">\\n        <div class=\\\"header\\\">\\n          Header\\n        </div>\\n      </th>\\n      <th class=\\\"sticky-header\\\">\\n        <div class=\\\"header\\\">\\n          Header\\n        </div>\\n      </th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let count of rowsCount\\\">\\n      <td>Text</td>\\n      <td>Text</td>\\n      <td>Text</td>\\n      <td>Text</td>\\n      <td>Text</td>\\n    </tr>\\n  </tbody>\\n</table>\\n\"","module.exports = \"<nav class=\\\"navbar\\\" role=\\\"navigation\\\" aria-label=\\\"main navigation\\\">\\n  <div class=\\\"navbar-brand\\\">\\n    <a class=\\\"navbar-item\\\" href=\\\"/\\\">\\n      <img src=\\\"https://bulma.io/images/bulma-logo.png\\\" alt=\\\"Bulma: a modern CSS framework based on Flexbox\\\" width=\\\"112\\\" height=\\\"28\\\">\\n    </a>\\n    <div class=\\\"navbar-menu\\\">\\n      <div class=\\\"navbar-start\\\">\\n        <a class=\\\"navbar-item\\\" routerLink=\\\"/\\\">\\n          Canvas\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</nav>\\n<section class=\\\"section\\\">\\n  <div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</section>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  constructor() {\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent {\n  rowsCount = Array(50);\n}\n","export const environment = {\n  production: true\n};\n","import {\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Params,\n} from '@angular/router';\nimport { createFeatureSelector, ActionReducerMap } from '@ngrx/store';\n\nimport * as fromRouter from '@ngrx/router-store';\n\nexport interface RouterStateUrl {\n  url: string;\n  queryParams: Params;\n  params: Params;\n}\n\nexport interface State {\n  routerReducer: fromRouter.RouterReducerState<RouterStateUrl>;\n}\n\nexport const reducers: ActionReducerMap<State> = {\n  routerReducer: fromRouter.routerReducer,\n};\n\nexport const getRouterState = createFeatureSelector<\n  fromRouter.RouterReducerState<RouterStateUrl>\n>('routerReducer');\n\nexport class CustomSerializer\n  implements fromRouter.RouterStateSerializer<RouterStateUrl> {\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    const { url } = routerState;\n    const { queryParams } = routerState.root;\n\n    let state: ActivatedRouteSnapshot = routerState.root;\n    while (state.firstChild) {\n      state = state.firstChild;\n    }\n    const { params } = state;\n\n    return { url, queryParams, params };\n  }\n}\n","import { Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { Socket, Channel } from 'phoenix';\n\nexport class PhoenixChannel {\n  private channel: Channel;\n\n  constructor(socket: Socket, topic: string, params = {}) {\n    this.channel = socket.channel(topic, params);\n  }\n\n  join() {\n    return new Observable((observer) => {\n      this.channel.join()\n        .receive('ok', (resp) => {\n          observer.next(resp);\n        })\n        .receive('error', (resp) => {\n          observer.error(resp);\n        });\n    });\n  }\n\n  push(message: string, payload: any, timeout?: number) {\n    this.channel.push(message, payload, timeout);\n  }\n\n  leave(timeout?: number) {\n    this.channel.leave(timeout);\n  }\n\n  messages(message) {\n    return new Observable((observer) => {\n      this.channel.on(message, (resp) => {\n        observer.next(resp);\n      });\n    }).pipe(\n      share(),\n    );\n  }\n}\n\nexport class PhoenixSocket {\n  private socket: Socket;\n\n  constructor(socketUrl) {\n    this.socket = new Socket(socketUrl);\n    this.socket.connect();\n  }\n\n  channel(topic, params = {}): PhoenixChannel {\n    return new PhoenixChannel(this.socket, topic, params);\n  }\n}\n\n","import { Component, ViewChild, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { Observable, fromEvent, pipe } from 'rxjs';\nimport { PhoenixSocket, PhoenixChannel } from '../lib/phoenix-rxjs';\n\nimport { switchMap, takeUntil, pairwise, tap, mergeMap, filter, merge, map } from 'rxjs/operators';\n\nconst phoenixSocket = new PhoenixSocket(`wss://7777b1b8.au.ngrok.io/socket`);\n\nconst getRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nconst STROKE_STARTED = 'stroke_started';\nconst STROKE_ADDED = 'stroke_added';\nconst STROKE_ENDED = 'stroke_ended';\n\ninterface StrokeMove {\n  offsetX: number;\n  offsetY: number;\n}\n\nconst getTouchPos = (canvasDom, touchEvent) => {\n  const rect = canvasDom.getBoundingClientRect();\n  return {\n    offsetX: touchEvent.changedTouches[0].clientX - rect.left,\n    offsetY: touchEvent.changedTouches[0].clientY - rect.top\n  };\n};\n\nconst getMousePos = (mouseEvent: MouseEvent) => {\n  return {\n    offsetX: mouseEvent.offsetX,\n    offsetY: mouseEvent.offsetY,\n  };\n};\nconst mapMouseEventToStrokeMove = () => map((mouseEvent: MouseEvent) => getMousePos(mouseEvent));\nconst mapTouchEventToStrokeMove = (canvas) => map((touchEvent: TouchEvent) => getTouchPos(canvas, touchEvent));\nconst mouseEventPreventDefault = () => tap((event: MouseEvent) => {\n  event.preventDefault();\n  event.stopPropagation();\n});\n\nconst touchEventOperators = (canvas) => pipe(\n  tap((touchEvent: TouchEvent) => {\n    if (touchEvent.target === canvas) {\n      touchEvent.preventDefault();\n    }\n  }),\n  filter((touchEvent: TouchEvent) => touchEvent.changedTouches.length > 0),\n  mapTouchEventToStrokeMove(canvas),\n);\n\n@Component({\n  selector: 'app-canvas',\n  templateUrl: './canvas.component.html',\n  styleUrls: ['./canvas.component.scss']\n})\nexport class CanvasComponent implements AfterViewInit {\n  @ViewChild('appCanvas') canvas;\n  @ViewChild('appCanvasContainer') canvasContainer;\n\n  constructor(private ref: ChangeDetectorRef) { }\n\n  ctx: CanvasRenderingContext2D;\n  mouseDown$: Observable<StrokeMove>;\n  mouseMove$: Observable<StrokeMove>;\n  mouseUp$: Observable<StrokeMove>;\n  color: string;\n  socketPending = true;\n  canvasChannel: PhoenixChannel;\n\n  ngAfterViewInit() {\n    const canvas = this.canvas.nativeElement;\n\n    this.setupCanvas(canvas);\n    this.handleCanvas(canvas);\n    this.setupWebSockets();\n  }\n\n  setupCanvas(canvas) {\n    const containerStyle = getComputedStyle(this.canvasContainer.nativeElement);\n    canvas.width = parseInt(containerStyle.width, 10);\n    canvas.height = parseInt(containerStyle.height, 10);\n\n    this.ctx = canvas.getContext('2d');\n    this.ctx.lineWidth = 5;\n    this.ctx.lineJoin = 'round';\n    this.ctx.lineCap = 'round';\n  }\n\n  handleCanvas(canvas) {\n\n    this.mouseDown$ = fromEvent<MouseEvent>(canvas, 'mousedown').pipe(\n      mouseEventPreventDefault(),\n      mapMouseEventToStrokeMove(),\n      merge(fromEvent(canvas, 'touchstart').pipe(touchEventOperators(canvas))),\n    );\n\n    this.mouseMove$ = fromEvent<MouseEvent>(canvas, 'mousemove').pipe(\n      mapMouseEventToStrokeMove(),\n      merge(fromEvent(canvas, 'touchmove').pipe(touchEventOperators(canvas))),\n    );\n\n    this.mouseUp$ = fromEvent<MouseEvent>(canvas, 'mouseup').pipe(\n      mapMouseEventToStrokeMove(),\n      merge(fromEvent(canvas, 'touchend').pipe(touchEventOperators(canvas))),\n    );\n\n    this.mouseDown$.pipe(\n      tap((mouseDown) => {\n        this.publishToSocket(STROKE_STARTED, mouseDown);\n      }),\n      switchMap((_) => this.mouseMove$\n        .pipe(\n          takeUntil(this.mouseUp$.pipe(\n            tap((mouseUp) => this.publishToSocket(STROKE_ENDED, mouseUp)),\n          )),\n      )),\n    ).subscribe((currentMove) => {\n      this.publishToSocket(STROKE_ADDED, currentMove);\n    });\n  }\n\n  publishToSocket(message: string, currentMove: StrokeMove) {\n    this.canvasChannel.push(message, {\n      x: currentMove.offsetX,\n      y: currentMove.offsetY,\n      color: this.color,\n    });\n  }\n\n  drawStroke(context, [lastMove, currentMove], strokeStyle) {\n    context.strokeStyle = strokeStyle;\n    context.beginPath();\n    context.moveTo(lastMove.x, lastMove.y);\n    context.lineTo(currentMove.x, currentMove.y);\n    context.closePath();\n    context.stroke();\n  }\n\n  setupWebSockets() {\n    this.color = getRandomColor();\n\n    const canvasChannel = phoenixSocket.channel('rooms:canvas', { color: this.color });\n    this.canvasChannel = canvasChannel;\n    canvasChannel.join()\n      .subscribe((_response) => {\n        this.socketPending = false;\n        this.ref.detectChanges();\n      });\n\n    const strokeStartedEvent$ = canvasChannel.messages(STROKE_STARTED);\n\n    const socketMessageDrawStroke$ = strokeStartedEvent$\n      .pipe(\n        mergeMap((strokeStarted: StrokeSocketEvent) => {\n          const strokeAddedEvent$ = canvasChannel.messages(STROKE_ADDED)\n            .pipe(\n              filter((stroke: StrokeSocketEvent) => stroke.color === strokeStarted.color),\n          );\n          const strokeEndedEvent$ = canvasChannel.messages(STROKE_ENDED)\n            .pipe(\n              filter((stroke: StrokeSocketEvent) => stroke.color === strokeStarted.color),\n          );\n          return strokeAddedEvent$\n            .pipe(\n              takeUntil(strokeEndedEvent$),\n              pairwise(),\n          );\n        }),\n    );\n\n    socketMessageDrawStroke$\n      .subscribe((messages: [StrokeSocketEvent, StrokeSocketEvent]) => {\n        this.drawStroke(this.ctx, messages, messages[0].color);\n      });\n  }\n}\n\nclass StrokeSocketEvent {\n  constructor(public x: string, public y: string, public color: string) { }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {\n  StoreRouterConnectingModule,\n  RouterStateSerializer,\n} from '@ngrx/router-store';\n\nimport { AppComponent } from './containers/app.component';\nimport { HomeComponent } from './home/home.component';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { environment } from '../config/environments/environment';\nimport { reducers, CustomSerializer } from './store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CanvasComponent } from './canvas/canvas.component';\n\nconst ROUTES: Routes = [\n  { path: '', component: CanvasComponent },\n  { path: 'sticky', component: HomeComponent },\n  {\n    path: 'todos',\n    loadChildren: '../features/todos/todos.module#TodosModule'\n  }\n];\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(ROUTES),\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot([]),\n    HttpClientModule,\n    StoreRouterConnectingModule,\n    StoreDevtoolsModule.instrument({\n      logOnly: environment.production // Restrict extension to log-only mode\n    })\n  ],\n  providers: [{ provide: RouterStateSerializer, useClass: CustomSerializer }],\n  declarations: [AppComponent, HomeComponent, CanvasComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './config/environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","module.exports = \"table {\\n  width: 100%; }\\n  table .sticky-header {\\n    position: -webkit-sticky;\\n    position: sticky;\\n    top: 0;\\n    z-index: 10;\\n    background-color: white;\\n    box-shadow: 0 1px 0 0 #ccc; }\\n\"","var map = {\n\t\"../features/todos/todos.module\": [\n\t\t\"90hs\",\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"crnd\";\nmodule.exports = webpackAsyncContext;","module.exports = \"<div class=\\\"page-container\\\">\\n  <div class=\\\"canvas-container\\\" #appCanvasContainer [ngClass]=\\\"socketPending ? 'hidden' : ''\\\">\\n    <canvas #appCanvas>\\n    </canvas>\\n  </div>\\n  <div class=\\\"spinner\\\" *ngIf=\\\"socketPending\\\"></div>\\n</div>\\n\"","module.exports = \".page-container {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100%; }\\n\\n.canvas-container {\\n  height: 600px;\\n  width: 800px; }\\n\\n.canvas-container canvas {\\n    background-color: lightgray; }\\n\\n.spinner {\\n  margin-top: 100px;\\n  border: solid 20px;\\n  border-radius: 50%;\\n  border-color: gray;\\n  -webkit-animation: scale-out 1s infinite ease-in-out;\\n          animation: scale-out 1s infinite ease-in-out; }\\n\\n@-webkit-keyframes scale-out {\\n  0% {\\n    width: 0px;\\n    height: 0px;\\n    -webkit-transform: translate(-40px);\\n            transform: translate(-40px); }\\n  50% {\\n    -webkit-transform: translate(40px);\\n            transform: translate(40px); }\\n  100% {\\n    -webkit-transform: translate(-40px);\\n            transform: translate(-40px); } }\\n\\n@keyframes scale-out {\\n  0% {\\n    width: 0px;\\n    height: 0px;\\n    -webkit-transform: translate(-40px);\\n            transform: translate(-40px); }\\n  50% {\\n    -webkit-transform: translate(40px);\\n            transform: translate(40px); }\\n  100% {\\n    -webkit-transform: translate(-40px);\\n            transform: translate(-40px); } }\\n\"","module.exports = \"\""],"sourceRoot":""}